---
- name: Configure mirror VM
  hosts: mirror
  vars_files:
    - host_vars/mirror/packages.yml
    - host_vars/mirror/secrets.yml


  tasks:
    - name: 'Update apt cache'
      become: true
      apt:
        update_cache: yes

    - name: 'Upgrade packages'
      become: true
      apt:
        upgrade: safe
        autoremove: yes

    - name: 'Install apt packages'
      become: true
      package:
        name: "{{ apt_packages}}"
        state: present

    - name: Add the flathub flatpak repository remote to the user installation
      community.general.flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
        method: user

    - name: 'Install flatpak packages'
      community.general.flatpak:
        name: "{{ flatpak_packages }}"
        state: present

    - name: 'Install chezmoi with snap'
      become: true
      snap:
        name: chezmoi
        classic: true

    - name: Check if just is installed
      stat:
        path: "/usr/local/bin/just"
      register: just_exists

    - name: Download just install script
      get_url:
        url: https://just.systems/install.sh
        dest: /tmp/install.sh
      when: just_exists.stat.exists == false

    - name: Make the script executable
      file:
        path: /tmp/install.sh
        mode: +x
      when: just_exists.stat.exists == false

    - name: Run just install script
      become: true
      command: /tmp/install.sh --to /usr/local/bin
      when: just_exists.stat.exists == false

    - name: Install magic wormhole
      become: true
      get_url:
        url: https://github.com/magic-wormhole/magic-wormhole.rs/releases/download/0.6.0/wormhole-rs
        dest: /usr/local/bin/wormhole-rs
        mode: "a+x"

    - name: Check if SSH key exists
      stat:
        path: "~/.ssh/id_ed25519"
      register: ssh_key_exists

    - name: Generate SSH key if it doesn't exist
      command:
        cmd: ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519 -N ""
      when: ssh_key_exists.stat.exists == false

    - name: Read public key
      shell: cat ~/.ssh/id_ed25519.pub
      register: file_content
      when: ssh_key_exists.stat.exists == false

    - name: Print public key to terminal
      debug:
        msg: "{{ file_content.stdout }}"
      when: ssh_key_exists.stat.exists == false

    - name: 'Pause: add public key to GitHub'
      pause:
        prompt: "Press Enter to continue..."
      when: ssh_key_exists.stat.exists == false

    - name: 'auto.master nfs config'
      become: true
      lineinfile:
        path: /etc/auto.master
        line: "/mnt/nfs /etc/auto.nfs --ghost --timeout=60"
        insertafter: EOF

    - name: 'Create /mnt/nfs directory'
      become: true
      file:
        path: /mnt/nfs
        state: directory

    - name: 'Copy auto.nfs file'
      become: true
      copy:
        src: configs/mirror/auto.nfs
        dest: /etc/auto.nfs

    - name: 'Enable/restart autofs.service'
      become: true
      systemd:
        name: autofs.service
        state: restarted
        enabled: yes

    - name: 'symlink freetube'
      file:
        src: "/home/{{ user }}/.var/app/io.freetubeapp.FreeTube/config/FreeTube"
        dest: "/home/{{ user }}/freetube"
        state: link


    # Install PowerShell
    - name: 'Install PowerShell pre-requisite packages'
      become: true
      apt:
        name:
          - wget
          - apt-transport-https
          - software-properties-common
        state: present

    - name: Get the version of Ubuntu
      shell: source /etc/os-release && echo $VERSION_ID
      args:
        executable: /bin/bash
      register: ubuntu_version

    - name: Download the Microsoft repository keys
      get_url:
        url: https://packages.microsoft.com/config/ubuntu/{{ ubuntu_version.stdout }}/packages-microsoft-prod.deb
        dest: /tmp/packages-microsoft-prod.deb

    - name: Register the Microsoft repository keys
      become: true
      apt:
        deb: /tmp/packages-microsoft-prod.deb
        state: present

    - name: Delete the Microsoft repository keys file
      file:
        path: /tmp/packages-microsoft-prod.deb
        state: absent

    - name: Update the list of packages after adding packages.microsoft.com
      become: true
      apt:
        update_cache: yes

    - name: Install PowerShell
      become: true
      apt:
        name: powershell
        state: present
